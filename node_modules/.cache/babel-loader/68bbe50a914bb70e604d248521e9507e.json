{"ast":null,"code":"import _classCallCheck from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/karammalkon/Documents/React/react-clicker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/karammalkon/Documents/React/react-clicker/src/components/clicker.js\";\nimport React from \"react\";\nimport { Button, Pane, toaster } from \"evergreen-ui\";\nimport \"./clicker.css\";\n\nvar Clicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clicker, _React$Component);\n\n  function Clicker(props) {\n    var _this;\n\n    _classCallCheck(this, Clicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clicker).call(this, props));\n\n    _this.addTen = function () {\n      _this.setState({\n        btnClicks: _this.state.btnClicks + 10\n      });\n    };\n\n    _this.state = {\n      // main resource\n      btnClicks: 0,\n      // main button action & price\n      mainClickIncrement: 1,\n      mainClickBuffPrice: 25,\n      // cheap autoclicker counter & price\n      autoClickNumber: 0,\n      autoClickPrice: 25,\n      // better autoclicker counter & price\n      betterAutoClickNumber: 0,\n      betterAutoClickPrice: 50,\n      // not used yet\n      interval: 1000,\n      // cheap react interval values\n      timer: null,\n      enabled: false,\n      timeout: 1000,\n      numberOfTimers: 0,\n      // better react interval values\n      betterTimer: null,\n      betterEnabled: false,\n      betterTimeout: 1000,\n      numberOfBetterTimers: 0,\n      // HUMANS\n      humanCounter: 0,\n      humanPrice: 500,\n      humanTimeout: 1000,\n      humanEnabled: false,\n      betterHumanMakerCounter: 1,\n      // betterhumanmakers cost humans & clicks in that order UNTIL I FIGURE OUT HOW TO ADD KEYS\n      betterHumanMakerPrice: [10, 500],\n      // 50 achievement bool\n      gameOverTrigger: false,\n      wereFifty: false,\n      // not used yet\n      auto: null\n    }; // React antics\n\n    _this.mainClick = _this.mainClick.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.addTen = this.addTen.bind(this);\n\n    _this.addHundred = _this.addHundred.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyAutoclick = _this.buyAutoclick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyBetterAutoclick = _this.buyBetterAutoclick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.shortenAutoClickIntervall = _this.shortenAutoClickIntervall.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buffMainClick = _this.buffMainClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toast = _this.toast.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createHuman = _this.createHuman.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.triggerAutoclick = _this.triggerAutoclick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.gameLoop = _this.gameLoop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.triggerBetterAutoclickers = _this.triggerBetterAutoclickers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.betterHumanMaker = _this.betterHumanMaker.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Clicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        if (_this2.state.auto) {\n          _this2.gameLoop();\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"gameLoop\",\n    value: function gameLoop() {\n      if (this.state.enabled) {\n        // cheap clicker\n        this.triggerAutoclick();\n      }\n\n      if (this.state.betterEnabled) {\n        // better clicker\n        this.triggerBetterAutoclickers();\n      } // human maker\n\n\n      if (this.state.btnClicks >= 500 && this.state.auto && this.state.humanCounter >= 2) {\n        this.createHuman();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    } // CLICKER\n\n  }, {\n    key: \"mainClick\",\n    value: function mainClick() {\n      this.setState({\n        btnClicks: this.state.btnClicks + this.state.mainClickIncrement\n      });\n    }\n  }, {\n    key: \"buffMainClick\",\n    value: function buffMainClick() {\n      // user this style here too\n      // const {count} = this.state;\n      this.setState({\n        mainClickIncrement: this.state.mainClickIncrement + 1,\n        btnClicks: this.state.btnClicks - this.state.mainClickBuffPrice,\n        mainClickBuffPrice: this.state.mainClickBuffPrice + 10\n      });\n    }\n  }, {\n    key: \"addHundred\",\n    value: function addHundred() {\n      this.setState({\n        btnClicks: this.state.btnClicks + 1000\n      });\n    } // Cheapest auto clicker\n\n  }, {\n    key: \"buyAutoclick\",\n    value: function buyAutoclick() {\n      this.setState({\n        autoClickNumber: this.state.autoClickNumber + 1,\n        btnClicks: this.state.btnClicks - this.state.autoClickPrice,\n        autoClickPrice: Math.floor(this.state.autoClickPrice * Math.pow(1.1, this.state.autoClickNumber)),\n        enabled: true,\n        auto: true,\n        numberOfTimers: this.state.numberOfTimers + 1\n      });\n    }\n  }, {\n    key: \"triggerAutoclick\",\n    value: function triggerAutoclick() {\n      this.setState({\n        btnClicks: this.state.btnClicks + 1 * this.state.autoClickNumber\n      });\n    } // Hipster auto clicker\n\n  }, {\n    key: \"buyBetterAutoclick\",\n    value: function buyBetterAutoclick() {\n      this.setState({\n        betterAutoClickNumber: this.state.betterAutoClickNumber + 1,\n        btnClicks: this.state.btnClicks - this.state.betterAutoClickPrice,\n        betterAutoClickPrice: Math.floor(this.state.betterAutoClickPrice * Math.pow(1.2, this.state.betterAutoClickNumber)),\n        betterEnabled: true,\n        auto: true,\n        numberOfBetterTimers: this.state.numberOfBetterTimers + 1\n      });\n    }\n  }, {\n    key: \"triggerBetterAutoclickers\",\n    value: function triggerBetterAutoclickers() {\n      this.setState({\n        btnClicks: this.state.btnClicks + 5 * this.state.betterAutoClickNumber\n      });\n    } // HUMANS\n\n  }, {\n    key: \"createHuman\",\n    value: function createHuman() {\n      var _this$state = this.state,\n          humanCounter = _this$state.humanCounter,\n          btnClicks = _this$state.btnClicks,\n          humanPrice = _this$state.humanPrice;\n      this.setState({\n        humanCounter: humanCounter + 1,\n        btnClicks: btnClicks - humanPrice,\n        humanEnabled: true,\n        auto: true\n      });\n    }\n  }, {\n    key: \"betterHumanMaker\",\n    value: function betterHumanMaker() {\n      this.setState({\n        betterHumanMakerCounter: this.state.betterHumanMakerCounter + 1,\n        btnClicks: this.state.btnClicks - this.state.betterHumanMakerPrice[1],\n        humanCounter: this.state.humanCounter - this.state.betterHumanMakerPrice[0]\n      });\n    }\n  }, {\n    key: \"shortenAutoClickIntervall\",\n    value: function shortenAutoClickIntervall() {\n      // Not working\n      this.setState({\n        interval: Math.round(this.state.interval / 2),\n        btnClicks: this.state.btnClicks - 150\n      });\n    }\n  }, {\n    key: \"toast\",\n    value: function toast() {\n      // Change this to be conditional and dynamic\n      console.log(this.state.wereFifty);\n      this.setState({\n        wereFifty: true\n      });\n\n      if (this.state.wereFifty) {\n        toaster.success(\"Congrats! You're good at clicking virtual buttons!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // STATES\n      var _this$state2 = this.state,\n          btnClicks = _this$state2.btnClicks,\n          humanCounter = _this$state2.humanCounter,\n          humanEnabled = _this$state2.humanEnabled,\n          humanTimeout = _this$state2.humanTimeout,\n          betterHumanMakerCounter = _this$state2.betterHumanMakerCounter,\n          humanPrice = _this$state2.humanPrice; // no more making instances of timers, we use a gameloop now boys\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Pane, {\n        display: \"flex\",\n        background: \"tint2\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        height: 40,\n        onClick: this.mainClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Click me!\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Clicks: \", Math.round(btnClicks)), React.createElement(Button, {\n        height: 40,\n        onClick: this.createHuman,\n        disabled: !(btnClicks >= 5000) // display=\"none\"\n        ,\n        style: {\n          opacity: !(btnClicks >= 5000) ? 0.5 : 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Create Human \\uD83D\\uDE10 cost: \", humanPrice, \" Clicks\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, humanCounter > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Humans: \", humanCounter)), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, humanCounter > 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Humans/second: \", humanCounter * betterHumanMakerCounter))), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Cheats!!1!\"), React.createElement(Pane, {\n        display: \"flex\",\n        background: \"tint2\",\n        padding: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Button, {\n        height: 20,\n        onClick: this.addTen // disabled={!(this.state.btnClicks >= 10)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"+10\"), React.createElement(Button, {\n        height: 20,\n        onClick: this.addHundred // disabled={!(this.state.btnClicks >= 100)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"+1000\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Store\"), React.createElement(Pane, {\n        display: \"flex\",\n        background: \"tint2\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.buyAutoclick // we enable this button only when this statement is true\n        ,\n        disabled: !(btnClicks >= this.state.autoClickPrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"auto click \", this.state.autoClickNumber, \" (cost:\", \" \", Math.round(this.state.autoClickPrice), \" clicks)\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.state.autoClickNumber, \" /second\"), React.createElement(Button, {\n        onClick: this.buyBetterAutoclick // we enable this button only when this statement is true\n        ,\n        disabled: !(btnClicks >= this.state.betterAutoClickPrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"BETTER auto click \", this.state.betterAutoClickNumber, \"(cost:\", Math.round(this.state.betterAutoClickPrice), \" clicks)\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.state.betterAutoClickNumber * 5, \" /second\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Upgrades\"), React.createElement(Pane, {\n        display: \"flex\",\n        background: \"tint2\",\n        padding: 20,\n        justifyContent: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.buffMainClick,\n        disabled: !(btnClicks >= this.state.mainClickBuffPrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Buff MAIN CLICK (cost: \", this.state.mainClickBuffPrice, \" clicks)\"), React.createElement(Button, {\n        onClick: this.betterHumanMaker,\n        disabled: !(btnClicks >= this.state.betterHumanMakerPrice[1] && humanCounter >= this.state.betterHumanMakerPrice[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Better Human Maker \\uD83C\\uDDF8\\uD83C\\uDDE6 (cost: \", this.state.betterHumanMakerPrice[0], \" \", \"Humans & \", this.state.betterHumanMakerPrice[1], \" Clicks)\")));\n    }\n  }]);\n\n  return Clicker;\n}(React.Component);\n\nexport { Clicker as default };","map":{"version":3,"sources":["/Users/karammalkon/Documents/React/react-clicker/src/components/clicker.js"],"names":["React","Button","Pane","toaster","Clicker","props","addTen","setState","btnClicks","state","mainClickIncrement","mainClickBuffPrice","autoClickNumber","autoClickPrice","betterAutoClickNumber","betterAutoClickPrice","interval","timer","enabled","timeout","numberOfTimers","betterTimer","betterEnabled","betterTimeout","numberOfBetterTimers","humanCounter","humanPrice","humanTimeout","humanEnabled","betterHumanMakerCounter","betterHumanMakerPrice","gameOverTrigger","wereFifty","auto","mainClick","bind","addHundred","buyAutoclick","buyBetterAutoclick","shortenAutoClickIntervall","buffMainClick","toast","createHuman","triggerAutoclick","gameLoop","triggerBetterAutoclickers","betterHumanMaker","setInterval","clearInterval","Math","floor","pow","round","console","log","success","opacity","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Pane, toaster } from \"evergreen-ui\";\nimport \"./clicker.css\";\n\nexport default class Clicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // main resource\n      btnClicks: 0,\n      // main button action & price\n      mainClickIncrement: 1,\n      mainClickBuffPrice: 25,\n      // cheap autoclicker counter & price\n      autoClickNumber: 0,\n      autoClickPrice: 25,\n      // better autoclicker counter & price\n      betterAutoClickNumber: 0,\n      betterAutoClickPrice: 50,\n      // not used yet\n      interval: 1000,\n      // cheap react interval values\n      timer: null,\n      enabled: false,\n      timeout: 1000,\n      numberOfTimers: 0,\n      // better react interval values\n      betterTimer: null,\n      betterEnabled: false,\n      betterTimeout: 1000,\n      numberOfBetterTimers: 0,\n      // HUMANS\n      humanCounter: 0,\n      humanPrice: 500,\n      humanTimeout: 1000,\n      humanEnabled: false,\n      betterHumanMakerCounter: 1,\n      // betterhumanmakers cost humans & clicks in that order UNTIL I FIGURE OUT HOW TO ADD KEYS\n      betterHumanMakerPrice: [10, 500],\n      // 50 achievement bool\n      gameOverTrigger: false,\n      wereFifty: false,\n      // not used yet\n      auto: null\n    };\n    // React antics\n    this.mainClick = this.mainClick.bind(this);\n    // this.addTen = this.addTen.bind(this);\n    this.addHundred = this.addHundred.bind(this);\n    this.buyAutoclick = this.buyAutoclick.bind(this);\n    this.buyBetterAutoclick = this.buyBetterAutoclick.bind(this);\n    this.shortenAutoClickIntervall = this.shortenAutoClickIntervall.bind(this);\n    this.buffMainClick = this.buffMainClick.bind(this);\n    this.toast = this.toast.bind(this);\n    this.createHuman = this.createHuman.bind(this);\n    this.triggerAutoclick = this.triggerAutoclick.bind(this);\n    this.gameLoop = this.gameLoop.bind(this);\n    this.triggerBetterAutoclickers = this.triggerBetterAutoclickers.bind(this);\n    this.betterHumanMaker = this.betterHumanMaker.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.state.auto) {\n        this.gameLoop();\n      }\n    }, 1000);\n  }\n\n  gameLoop() {\n    if (this.state.enabled) {\n      // cheap clicker\n      this.triggerAutoclick();\n    }\n    if (this.state.betterEnabled) {\n      // better clicker\n      this.triggerBetterAutoclickers();\n    }\n    // human maker\n    if (\n      this.state.btnClicks >= 500 &&\n      this.state.auto &&\n      this.state.humanCounter >= 2\n    ) {\n      this.createHuman();\n    }\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  // CLICKER\n  mainClick() {\n    this.setState({\n      btnClicks: this.state.btnClicks + this.state.mainClickIncrement\n    });\n  }\n\n  buffMainClick() {\n    // user this style here too\n    // const {count} = this.state;\n    this.setState({\n      mainClickIncrement: this.state.mainClickIncrement + 1,\n      btnClicks: this.state.btnClicks - this.state.mainClickBuffPrice,\n      mainClickBuffPrice: this.state.mainClickBuffPrice + 10\n    });\n  }\n\n  addTen = () => {\n    this.setState({\n      btnClicks: this.state.btnClicks + 10\n    });\n  };\n\n  addHundred() {\n    this.setState({\n      btnClicks: this.state.btnClicks + 1000\n    });\n  }\n\n  // Cheapest auto clicker\n  buyAutoclick() {\n    this.setState({\n      autoClickNumber: this.state.autoClickNumber + 1,\n      btnClicks: this.state.btnClicks - this.state.autoClickPrice,\n      autoClickPrice: Math.floor(\n        this.state.autoClickPrice * Math.pow(1.1, this.state.autoClickNumber)\n      ),\n      enabled: true,\n      auto: true,\n      numberOfTimers: this.state.numberOfTimers + 1\n    });\n  }\n\n  triggerAutoclick() {\n    this.setState({\n      btnClicks: this.state.btnClicks + 1 * this.state.autoClickNumber\n    });\n  }\n\n  // Hipster auto clicker\n  buyBetterAutoclick() {\n    this.setState({\n      betterAutoClickNumber: this.state.betterAutoClickNumber + 1,\n      btnClicks: this.state.btnClicks - this.state.betterAutoClickPrice,\n      betterAutoClickPrice: Math.floor(\n        this.state.betterAutoClickPrice *\n          Math.pow(1.2, this.state.betterAutoClickNumber)\n      ),\n      betterEnabled: true,\n      auto: true,\n      numberOfBetterTimers: this.state.numberOfBetterTimers + 1\n    });\n  }\n  triggerBetterAutoclickers() {\n    this.setState({\n      btnClicks: this.state.btnClicks + 5 * this.state.betterAutoClickNumber\n    });\n  }\n\n  // HUMANS\n  createHuman() {\n    const { humanCounter, btnClicks, humanPrice } = this.state;\n    this.setState({\n      humanCounter: humanCounter + 1,\n      btnClicks: btnClicks - humanPrice,\n      humanEnabled: true,\n      auto: true\n    });\n  }\n\n  betterHumanMaker() {\n    this.setState({\n      betterHumanMakerCounter: this.state.betterHumanMakerCounter + 1,\n      btnClicks: this.state.btnClicks - this.state.betterHumanMakerPrice[1],\n      humanCounter:\n        this.state.humanCounter - this.state.betterHumanMakerPrice[0]\n    });\n  }\n  shortenAutoClickIntervall() {\n    // Not working\n    this.setState({\n      interval: Math.round(this.state.interval / 2),\n      btnClicks: this.state.btnClicks - 150\n    });\n  }\n\n  toast() {\n    // Change this to be conditional and dynamic\n    console.log(this.state.wereFifty);\n    this.setState({\n      wereFifty: true\n    });\n    if (this.state.wereFifty) {\n      toaster.success(\"Congrats! You're good at clicking virtual buttons!\");\n    }\n  }\n\n  render() {\n    // STATES\n    const {\n      btnClicks,\n      humanCounter,\n      humanEnabled,\n      humanTimeout,\n      betterHumanMakerCounter,\n      humanPrice\n    } = this.state;\n    // no more making instances of timers, we use a gameloop now boys\n\n    return (\n      <div>\n        {/* add this to the gameloop */}\n        <Pane\n          display=\"flex\"\n          background=\"tint2\"\n          padding={20}\n          justifyContent=\"space-between\"\n        >\n          <Button height={40} onClick={this.mainClick}>\n            Click me!\n          </Button>\n          <h4>Clicks: {Math.round(btnClicks)}</h4>\n\n          <Button\n            height={40}\n            onClick={this.createHuman}\n            disabled={!(btnClicks >= 5000)}\n            // display=\"none\"\n            style={{ opacity: !(btnClicks >= 5000) ? 0.5 : 1 }}\n          >\n            Create Human 😐 cost: {humanPrice} Clicks\n          </Button>\n          <h4>{humanCounter > 0 && <div>Humans: {humanCounter}</div>}</h4>\n          <h4>\n            {humanCounter > 0 && (\n              <div>Humans/second: {humanCounter * betterHumanMakerCounter}</div>\n            )}\n          </h4>\n        </Pane>\n\n        <h3>Cheats!!1!</h3>\n        <Pane display=\"flex\" background=\"tint2\" padding={20}>\n          <Button\n            height={20}\n            onClick={this.addTen}\n            // disabled={!(this.state.btnClicks >= 10)}\n          >\n            +10\n          </Button>\n          <Button\n            height={20}\n            onClick={this.addHundred}\n            // disabled={!(this.state.btnClicks >= 100)}\n          >\n            +1000\n          </Button>\n        </Pane>\n\n        <h3>Store</h3>\n        <Pane\n          display=\"flex\"\n          background=\"tint2\"\n          padding={20}\n          justifyContent=\"space-between\"\n        >\n          <Button\n            onClick={this.buyAutoclick}\n            // we enable this button only when this statement is true\n            disabled={!(btnClicks >= this.state.autoClickPrice)}\n          >\n            auto click {this.state.autoClickNumber} (cost:{\" \"}\n            {Math.round(this.state.autoClickPrice)} clicks)\n          </Button>\n          <h4>{this.state.autoClickNumber} /second</h4>\n          <Button\n            onClick={this.buyBetterAutoclick}\n            // we enable this button only when this statement is true\n            disabled={!(btnClicks >= this.state.betterAutoClickPrice)}\n          >\n            BETTER auto click {this.state.betterAutoClickNumber}(cost:\n            {Math.round(this.state.betterAutoClickPrice)} clicks)\n          </Button>\n          <h4>{this.state.betterAutoClickNumber * 5} /second</h4>\n        </Pane>\n\n        <h3>Upgrades</h3>\n        <Pane\n          display=\"flex\"\n          background=\"tint2\"\n          padding={20}\n          justifyContent=\"space-between\"\n        >\n          <Button\n            onClick={this.buffMainClick}\n            disabled={!(btnClicks >= this.state.mainClickBuffPrice)}\n          >\n            Buff MAIN CLICK (cost: {this.state.mainClickBuffPrice} clicks)\n          </Button>\n          {/* add betterhumanmaker improver button */}\n          <Button\n            onClick={this.betterHumanMaker}\n            disabled={\n              !(\n                btnClicks >= this.state.betterHumanMakerPrice[1] &&\n                humanCounter >= this.state.betterHumanMakerPrice[0]\n              )\n            }\n          >\n            Better Human Maker 🇸🇦 (cost: {this.state.betterHumanMakerPrice[0]}{\" \"}\n            Humans & {this.state.betterHumanMakerPrice[1]} Clicks)\n          </Button>\n        </Pane>\n\n        {/* <div>\n          {this.state.btnClicks >= 150 && this.state.auto === \"one\" ? (\n            <Button\n              marginBottom={20}\n              marginTop={10}\n              onClick={this.shortenAutoClickIntervall}\n            >\n              Shorten auto click interval (Cost: 150)\n            </Button>\n          ) : (\n            <Button\n              marginBottom={20}\n              marginTop={10}\n              disabled={true}\n              onClick={this.shortenAutoClickIntervall}\n            >\n              Shorten autoClick interval\n            </Button>\n          )}\n        </div> */}\n        {/* {this.state.btnClicks >= 50 ? this.toast() : \"\"} */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}